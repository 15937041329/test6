2019-09-17 11:21:38.237 [main] INFO  com.test.demo.DemoApplication - Starting DemoApplication on dh10 with PID 9148 (started by Administrator in E:\IDEA\IDEA WorkSpace\test)
2019-09-17 11:21:38.247 [main] INFO  com.test.demo.DemoApplication - No active profile set, falling back to default profiles: default
2019-09-17 11:21:39.496 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-09-17 11:21:39.497 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-09-17 11:21:39.532 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
2019-09-17 11:21:39.830 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$7959d4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:39.856 [main] INFO  o.s.w.s.a.server.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2019-09-17 11:21:39.912 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$62fdd84c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.009 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'demoApplication' of type [com.test.demo.DemoApplication$$EnhancerBySpringCGLIB$$eaa5c3c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.086 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'duridDatasource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.204 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.218 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.224 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$f771d356] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.231 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.234 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.307 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$ffe70bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.316 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.324 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'transactionConfig' of type [com.test.demo.publicres.config.TransactionConfig$$EnhancerBySpringCGLIB$$1f2c33d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.330 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'txAdvice' of type [org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.331 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'txAdviceAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:21:40.669 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2019-09-17 11:21:40.681 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-09-17 11:21:40.690 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-09-17 11:21:40.690 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.22]
2019-09-17 11:21:40.844 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-09-17 11:21:40.844 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2520 ms
2019-09-17 11:21:41.218 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2019-09-17 11:21:42.187 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-09-17 11:21:42.510 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-09-17 11:21:43.484 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2019-09-17 11:21:43.499 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2019-09-17 11:21:43.527 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2019-09-17 11:21:43.719 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-09-17 11:21:43.739 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2019-09-17 11:21:43.741 [main] INFO  com.test.demo.DemoApplication - Started DemoApplication in 6.47 seconds (JVM running for 8.202)
2019-09-17 11:21:45.332 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-09-17 11:21:45.333 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-09-17 11:21:45.348 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2019-09-17 11:22:02.440 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around . 环绕前】方法环绕start.....
2019-09-17 11:22:02.441 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】------------------切面  before
2019-09-17 11:22:02.441 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】浏览器输入的网址=URL : http://localhost:8080/v1/user/4
2019-09-17 11:22:02.441 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】HTTP_METHOD : GET
2019-09-17 11:22:02.441 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】IP : 0:0:0:0:0:0:0:1
2019-09-17 11:22:02.443 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】执行的业务方法名=CLASS_METHOD : com.test.demo.user.impl.UserServiceImpl.queryUserById
2019-09-17 11:22:02.443 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】业务方法获得的参数=ARGS : [4]
2019-09-17 11:22:02.868 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around. 环绕后】方法环绕proceed，结果是 :User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null)
2019-09-17 11:22:02.868 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：After】方法最后执行.....
2019-09-17 11:22:02.868 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：AfterReturning】这个会在切面最后的最后打印，方法的返回值 : User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null)
2019-09-17 11:27:42.426 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around . 环绕前】方法环绕start.....
2019-09-17 11:27:42.427 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】------------------切面  before
2019-09-17 11:27:42.427 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】浏览器输入的网址=URL : http://localhost:8080/v1/user
2019-09-17 11:27:42.427 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】HTTP_METHOD : GET
2019-09-17 11:27:42.427 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】IP : 0:0:0:0:0:0:0:1
2019-09-17 11:27:42.427 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】执行的业务方法名=CLASS_METHOD : com.test.demo.user.impl.UserServiceImpl.queryUsers
2019-09-17 11:27:42.427 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】业务方法获得的参数=ARGS : []
2019-09-17 11:27:42.432 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around. 环绕后】方法环绕proceed，结果是 :[User(id=1, userName=user, passWord=123456, address=河南郑州, phone=15239726452, description=测试描述), User(id=2, userName=admin, passWord=123456, address=河南信阳, phone=18296541256, description=测试描述2), User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=5, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=7, userName=string, passWord=string, address=string, phone=string, description=string), User(id=8, userName=string, passWord=1, address=string, phone=1, description=string)]
2019-09-17 11:27:42.432 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：After】方法最后执行.....
2019-09-17 11:27:42.432 [http-nio-8080-exec-4] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：AfterReturning】这个会在切面最后的最后打印，方法的返回值 : [User(id=1, userName=user, passWord=123456, address=河南郑州, phone=15239726452, description=测试描述), User(id=2, userName=admin, passWord=123456, address=河南信阳, phone=18296541256, description=测试描述2), User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=5, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=7, userName=string, passWord=string, address=string, phone=string, description=string), User(id=8, userName=string, passWord=1, address=string, phone=1, description=string)]
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around . 环绕前】方法环绕start.....
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】------------------切面  before
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】浏览器输入的网址=URL : http://localhost:8080/v1/user
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】HTTP_METHOD : GET
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】IP : 0:0:0:0:0:0:0:1
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】执行的业务方法名=CLASS_METHOD : com.test.demo.user.impl.UserServiceImpl.queryUsers
2019-09-17 11:36:46.111 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】业务方法获得的参数=ARGS : []
2019-09-17 11:36:46.116 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around. 环绕后】方法环绕proceed，结果是 :[User(id=1, userName=user, passWord=123456, address=河南郑州, phone=15239726452, description=测试描述), User(id=2, userName=admin, passWord=123456, address=河南信阳, phone=18296541256, description=测试描述2), User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=5, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=7, userName=string, passWord=string, address=string, phone=string, description=string), User(id=8, userName=string, passWord=1, address=string, phone=1, description=string)]
2019-09-17 11:36:46.116 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：After】方法最后执行.....
2019-09-17 11:36:46.116 [http-nio-8080-exec-6] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：AfterReturning】这个会在切面最后的最后打印，方法的返回值 : [User(id=1, userName=user, passWord=123456, address=河南郑州, phone=15239726452, description=测试描述), User(id=2, userName=admin, passWord=123456, address=河南信阳, phone=18296541256, description=测试描述2), User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=5, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=7, userName=string, passWord=string, address=string, phone=string, description=string), User(id=8, userName=string, passWord=1, address=string, phone=1, description=string)]
2019-09-17 11:37:46.497 [main] INFO  com.test.demo.DemoApplication - Starting DemoApplication on dh10 with PID 11324 (started by Administrator in E:\IDEA\IDEA WorkSpace\test)
2019-09-17 11:37:46.501 [main] INFO  com.test.demo.DemoApplication - No active profile set, falling back to default profiles: default
2019-09-17 11:37:47.287 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-09-17 11:37:47.288 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-09-17 11:37:47.321 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
2019-09-17 11:37:47.617 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$59114dbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.644 [main] INFO  o.s.w.s.a.server.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2019-09-17 11:37:47.693 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b47988c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.785 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'demoApplication' of type [com.test.demo.DemoApplication$$EnhancerBySpringCGLIB$$3c217436] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.859 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'duridDatasource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.973 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.983 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.988 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$48ed83ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.995 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.998 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:47.999 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$617a212f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:48.008 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:48.016 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'transactionConfig' of type [com.test.demo.publicres.config.TransactionConfig$$EnhancerBySpringCGLIB$$70a7e44c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:48.021 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'txAdvice' of type [org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:48.021 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'txAdviceAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-09-17 11:37:48.356 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2019-09-17 11:37:48.368 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-09-17 11:37:48.377 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-09-17 11:37:48.377 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.22]
2019-09-17 11:37:48.522 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-09-17 11:37:48.522 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1942 ms
2019-09-17 11:37:48.859 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2019-09-17 11:37:49.567 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-09-17 11:37:49.886 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-09-17 11:37:50.933 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2019-09-17 11:37:50.948 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2019-09-17 11:37:50.979 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2019-09-17 11:37:51.121 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-09-17 11:37:51.141 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2019-09-17 11:37:51.144 [main] INFO  com.test.demo.DemoApplication - Started DemoApplication in 5.128 seconds (JVM running for 5.766)
2019-09-17 11:37:54.498 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-09-17 11:37:54.498 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-09-17 11:37:54.514 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2019-09-17 11:37:54.541 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around . 环绕前】方法环绕start.....
2019-09-17 11:37:54.542 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】------------------切面  before
2019-09-17 11:37:54.542 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】浏览器输入的网址=URL : http://localhost:8080/v1/user
2019-09-17 11:37:54.542 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】HTTP_METHOD : GET
2019-09-17 11:37:54.543 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】IP : 0:0:0:0:0:0:0:1
2019-09-17 11:37:54.544 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】执行的业务方法名=CLASS_METHOD : com.test.demo.user.impl.UserServiceImpl.queryUsers
2019-09-17 11:37:54.544 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Before】业务方法获得的参数=ARGS : []
2019-09-17 11:37:54.656 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：Around. 环绕后】方法环绕proceed，结果是 :[User(id=1, userName=user, passWord=123456, address=河南郑州, phone=15239726452, description=测试描述), User(id=2, userName=admin, passWord=123456, address=河南信阳, phone=18296541256, description=测试描述2), User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=5, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=7, userName=string, passWord=string, address=string, phone=string, description=string), User(id=8, userName=string, passWord=1, address=string, phone=1, description=string)]
2019-09-17 11:37:54.657 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：After】方法最后执行.....
2019-09-17 11:37:54.657 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：AfterReturning】这个会在切面最后的最后打印，方法的返回值 : [User(id=1, userName=user, passWord=123456, address=河南郑州, phone=15239726452, description=测试描述), User(id=2, userName=admin, passWord=123456, address=河南信阳, phone=18296541256, description=测试描述2), User(id=4, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=5, userName=zhangsan, passWord=lisi, address=null, phone=null, description=null), User(id=7, userName=string, passWord=string, address=string, phone=string, description=string), User(id=8, userName=string, passWord=1, address=string, phone=1, description=string)]
2019-09-17 11:37:54.657 [http-nio-8080-exec-1] INFO  com.test.demo.publicres.config.TransactionConfig - 【注解：AfterReturning】花费时间 : 115毫秒
